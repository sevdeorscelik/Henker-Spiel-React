{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/henker-spiel-react/src/Hangman.js\";\nimport React, { Component } from 'react';\nimport './Hangman.css';\nimport img0 from './0.png';\nimport img1 from './1.png';\nimport img2 from './2.png';\nimport img3 from './3.png';\nimport img4 from './4.png';\nimport img5 from './5.png';\nimport img6 from './6.png';\nimport { randomWord } from './words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nWrong: 0,\n      gussed: new Set(),\n      answer: randomWord()\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  handleGuess(e) {\n    let ltr = e.target.value;\n    this.setState(st => ({\n      gussed: st.gussed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n\n  guessedWord() {\n    return this.state.answer.split('').map(ltr => this.state.gussed.has(ltr) ? ltr : '_');\n  }\n\n  generateButtons() {\n    return 'abcdefghijklmnopqrstuvwxyz'.split('').map(ltr => /*#__PURE__*/_jsxDEV(\"button\", {\n      value: ltr,\n      onClick: this.handleGuess,\n      disabled: this.state.gussed.has(ltr),\n      children: ltr\n    }, ltr, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  }\n\n  restart() {\n    this.setState({\n      nWrong: 0,\n      gussed: new Set(),\n      answer: randomWord()\n    });\n  }\n\n  render() {\n    let gameOver = this.state.nWrong >= this.props.maxWrong;\n    const altText = `${this.state.nWrong}/${this.props.maxWrong} tahmin sayacı`;\n    const isWinner = this.guessedWord().join('') === this.state.answer;\n    let gameState = this.generateButtons();\n    if (isWinner) gameState = 'Tebrikler! Diğer kelimeye geçmeye ne dersin';\n    if (gameOver) gameState = 'Maalesef Adam İdam Edildi:(';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Henker Spiel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.images[this.state.nWrong],\n          alt: altText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Hangman-wrong\",\n          children: [\"Hatal\\u0131 Tahmin: \", this.state.nWrong, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Hangman-word\",\n          children: [!gameOver ? this.guessedWord() : this.state.answer, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Hangman-btns\",\n          children: gameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"restart\",\n          onClick: this.restart,\n          children: \"Yeni Kelime Al!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nHangman.defaultProps = {\n  images: [img0, img1, img2, img3, img4, img5, img6],\n  maxWrong: 6\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","img0","img1","img2","img3","img4","img5","img6","randomWord","Hangman","constructor","props","state","nWrong","gussed","Set","answer","handleGuess","bind","restart","e","ltr","target","value","setState","st","add","includes","guessedWord","split","map","has","generateButtons","render","gameOver","maxWrong","altText","isWinner","join","gameState","images","defaultProps"],"sources":["/home/user/Desktop/henker-spiel-react/src/Hangman.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './Hangman.css'\nimport img0 from './0.png'\nimport img1 from './1.png'\nimport img2 from './2.png'\nimport img3 from './3.png'\nimport img4 from './4.png'\nimport img5 from './5.png'\nimport img6 from './6.png'\nimport { randomWord } from './words'\n\nclass Hangman extends Component {\n  static defaultProps = {\n    images: [img0, img1, img2, img3, img4, img5, img6],\n    maxWrong: 6,\n  }\n  constructor(props) {\n    super(props)\n    this.state = { nWrong: 0, gussed: new Set(), answer: randomWord() }\n    this.handleGuess = this.handleGuess.bind(this)\n    this.restart = this.restart.bind(this)\n  }\n  handleGuess(e) {\n    let ltr = e.target.value\n    this.setState((st) => ({\n      gussed: st.gussed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1),\n    }))\n  }\n  guessedWord() {\n    return this.state.answer\n      .split('')\n      .map((ltr) => (this.state.gussed.has(ltr) ? ltr : '_'))\n  }\n  generateButtons() {\n    return 'abcdefghijklmnopqrstuvwxyz'.split('').map((ltr) => (\n      <button\n        key={ltr}\n        value={ltr}\n        onClick={this.handleGuess}\n        disabled={this.state.gussed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ))\n  }\n\n  restart() {\n    this.setState({\n      nWrong: 0,\n      gussed: new Set(),\n      answer: randomWord(),\n    })\n  }\n\n  render() {\n    let gameOver = this.state.nWrong >= this.props.maxWrong\n    const altText = `${this.state.nWrong}/${this.props.maxWrong} tahmin sayacı`\n    const isWinner = this.guessedWord().join('') === this.state.answer\n    let gameState = this.generateButtons()\n    if (isWinner) gameState = 'Tebrikler! Diğer kelimeye geçmeye ne dersin'\n    if (gameOver) gameState = 'Maalesef Adam İdam Edildi:('\n    return (\n      <div className='Hangman'>\n        <h2>Henker Spiel</h2>\n        <div>\n          <img src={this.props.images[this.state.nWrong]} alt={altText} />\n          <p className='Hangman-wrong'>Hatalı Tahmin: {this.state.nWrong} </p>\n          <p className='Hangman-word'>\n            {!gameOver ? this.guessedWord() : this.state.answer}{' '}\n          </p>\n        </div>\n\n        <div>\n          <p className='Hangman-btns'>{gameState}</p>\n          <button id='restart' onClick={this.restart}>\n            Yeni Kelime Al!\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Hangman\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}